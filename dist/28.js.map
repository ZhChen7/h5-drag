{"version":3,"sources":["webpack:///./src/assets/pie.png","webpack:///./src/components/BasicShop/VisualComponents/Pie/index.less","webpack:///./src/components/BasicShop/VisualComponents/Pie/index.tsx"],"names":["XLine","props","isTpl","data","color","size","paddingTop","title","chartRef","useRef","useEffect","chart","Chart","el","current","undefined","pixelRatio","window","devicePixelRatio","dataX","map","item","value","Number","a","source","percent","formatter","val","dataMap","reduce","prev","cur","name","legend","position","itemFormatter","tooltip","coord","transposed","radius","axis","interval","adjust","style","lineWidth","stroke","lineJoin","lineCap","animate","appear","duration","easing","render","styles","chartWrap","chartTitle","fontSize","PieImg","memo"],"mappings":"+EAAA,EAAO,QAAU,IAA0B,2B,qBCC3C,EAAO,QAAU,CAAC,UAAY,oBAAoB,WAAa,uB,6ICezDA,EAASC,IAAuB,GAC5BC,GAAgDD,EAAhDC,MAAOC,EAAyCF,EAAzCE,KAAMC,EAAmCH,EAAnCG,MAAOC,EAA4BJ,EAA5BI,KAAMC,EAAsBL,EAAtBK,WAAYC,EAAUN,EAAVM,MACxCC,EAAWC,iBAAO,MACxBC,2BAAU,KACR,GAAI,CAACR,GACH,GAAMS,GAAQ,GAAIC,SAAM,CACtBC,GAAIL,EAASM,SAAWC,OACxBC,WAAYC,OAAOC,mBAIfC,EAAQhB,EAAKiB,IAAIC,GAAQ,YAAC,eAAKA,GAAV,IAAgBC,MAAOC,OAAOF,EAAKC,OAAQE,EAAG,OAGzEb,EAAMc,OAAON,EAAO,CAClBO,QAAS,CACPC,UAAW,SAAmBC,GAC5B,MAAOA,GAAM,IAAM,QAMzB,GAAMC,GAAmBV,EAAMW,OAAO,CAACC,EAAWC,IACzCD,EAAKE,KAAL,cACAF,EAAKE,MAAOF,EAAKT,OAAU,EAAGU,EAAIC,MAAOD,EAAIV,QAD7C,2BAEES,GAAS,EAAGC,EAAIC,MAAOD,EAAIV,SAGtCX,EAAMuB,OAAO,CACXC,SAAU,QACVC,cAAe,SAAuBR,GACpC,MAAOA,GAAM,KAAOC,EAAQD,GAAO,OAGvCjB,EAAM0B,QAAQ,IACd1B,EAAM2B,MAAM,QAAS,CACnBC,WAAY,GACZC,OAAQ,MAEV7B,EAAM8B,KAAK,IACX9B,EACG+B,WACAP,SAAS,WACT/B,MAAM,OAAQ,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAEDuC,OAAO,SACPC,MAAM,CACLC,UAAW,EACXC,OAAQ,OACRC,SAAU,QACVC,QAAS,UAEVC,QAAQ,CACPC,OAAQ,CACNC,SAAU,KACVC,OAAQ,eAIdzC,EAAM0C,WAEP,CAAClD,EAAMD,IAER,yBAAK,UAAWoD,IAAOC,WACrB,yBAAK,UAAWD,IAAOE,WAAY,MAAO,CAAEpD,QAAOqD,SAAUpD,EAAMC,eAChEC,GAEFL,EAAQ,yBAAK,IAAKwD,IAAQ,IAAI,kBAAqB,4BAAQ,IAAKlD,MAKxDmD,yBAAK3D","file":"28.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/pie.31be0e63.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartWrap\":\"chartWrap___NsW4Q\",\"chartTitle\":\"chartTitle___3j9w1\"};","import { Chart } from '@antv/f2';\nimport React, { memo, useEffect, useRef } from 'react';\n// import { uuid } from 'utils/tool';\nimport PieImg from '@/assets/pie.png';\n\nimport styles from './index.less';\nimport { IChartConfig } from './schema';\n\ninterface XChartProps extends IChartConfig {\n  isTpl: boolean;\n}\n\ninterface DataMap {\n  [name: string]: number | string;\n}\n\nconst XLine = (props: XChartProps) => {\n  const { isTpl, data, color, size, paddingTop, title } = props;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!isTpl) {\n      const chart = new Chart({\n        el: chartRef.current || undefined,\n        pixelRatio: window.devicePixelRatio, // 指定分辨率\n      });\n\n      // step 2: 处理数据\n      const dataX = data.map(item => ({ ...item, value: Number(item.value), a: '1' }));\n\n      // Step 2: 载入数据源\n      chart.source(dataX, {\n        percent: {\n          formatter: function formatter(val) {\n            return val * 100 + '%';\n          },\n        },\n      });\n\n      // 获取数据的map类型，用以展示图例说明\n      const dataMap: DataMap = dataX.reduce((prev: any, cur) => {\n        return prev.name\n          ? { [prev.name]: prev.value, ...{ [cur.name]: cur.value } }\n          : { ...prev, ...{ [cur.name]: cur.value } };\n      });\n\n      chart.legend({\n        position: 'right',\n        itemFormatter: function itemFormatter(val) {\n          return val + '  ' + dataMap[val] + '%';\n        },\n      });\n      chart.tooltip(false);\n      chart.coord('polar', {\n        transposed: true,\n        radius: 0.85,\n      });\n      chart.axis(false);\n      chart\n        .interval()\n        .position('a*value')\n        .color('name', [\n          '#1890FF',\n          '#13C2C2',\n          '#2FC25B',\n          '#FACC14',\n          '#00CC99',\n          '#CC3366',\n          '#CC6600',\n          '#CC66CC',\n          '#FF3366',\n          '#0066CC',\n        ])\n        .adjust('stack')\n        .style({\n          lineWidth: 1,\n          stroke: '#fff',\n          lineJoin: 'round',\n          lineCap: 'round',\n        })\n        .animate({\n          appear: {\n            duration: 1200,\n            easing: 'bounceOut',\n          },\n        });\n\n      chart.render();\n    }\n  }, [data, isTpl]);\n  return (\n    <div className={styles.chartWrap}>\n      <div className={styles.chartTitle} style={{ color, fontSize: size, paddingTop }}>\n        {title}\n      </div>\n      {isTpl ? <img src={PieImg} alt=\"dooring chart\" /> : <canvas ref={chartRef}></canvas>}\n    </div>\n  );\n};\n\nexport default memo(XLine);\n"],"sourceRoot":""}