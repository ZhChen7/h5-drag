{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/rc-util/es/Portal.js","webpack:///./node_modules/rc-util/es/Children/toArray.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///./node_modules/rc-util/es/Dom/contains.js","webpack:///./node_modules/rc-resize-observer/es/index.js","webpack:///./node_modules/rc-util/es/Dom/addEventListener.js"],"names":["gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","args","arguments","apply","asyncGeneratorStep","err","undefined","Portal","forwardRef","props","ref","didUpdate","getContainer","children","containerRef","useRef","useImperativeHandle","initRef","current","canUseDom","useEffect","_containerRef$current","_containerRef$current2","parentNode","removeChild","ReactDOM","createPortal","option","length","ret","React","Children","forEach","child","keepEmpty","Array","isArray","concat","toArray","isFragment","push","MapShim","Map","arr","result","some","entry","index","__entries__","Object","defineProperty","class_1","prototype","get","enumerable","configurable","getIndex","set","entries","splice","has","clear","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","delay","leadingCall","trailingCall","lastCallTime","proxy","resolvePending","timeStamp","timeoutCallback","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","parseFloat","styles","positions","reduce","size","position","toFloat","paddings","positions_1","bbox","getBBox","width","height","clientWidth","clientHeight","getComputedStyle","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","round","getBordersSize","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getSVGContentRect","getHTMLElementContentRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","getContentRect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","root","n","contains","INTERNAL_PREFIX_KEY","ReactResizeObserver","_React$Component","_inherits","_super","_createSuper","_classCallCheck","resizeObserver","childNode","currentElement","state","offsetHeight","offsetWidth","onResize","_target$getBoundingCl","getBoundingClientRect","fixedWidth","floor","fixedHeight","setState","_objectSpread","setChildNode","node","_createClass","onComponentUpdated","destroyObserver","disabled","element","findDOMNode","elementChanged","childNodes","warning","supportRef","composeRef","displayName","eventType","cb","unstable_batchedUpdates","e","remove"],"mappings":"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","file":"vendors~layouts__index~p__editor~p__home~p__login.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport ReactDOM from 'react-dom';\nimport canUseDom from './Dom/canUseDom';\nvar Portal = forwardRef(function (props, ref) {\n  var didUpdate = props.didUpdate,\n      getContainer = props.getContainer,\n      children = props.children;\n  var containerRef = useRef(); // Ref return nothing, only for wrapper check exist\n\n  useImperativeHandle(ref, function () {\n    return {};\n  }); // Create container in client side with sync to avoid useEffect not get ref\n\n  var initRef = useRef(false);\n\n  if (!initRef.current && canUseDom()) {\n    containerRef.current = getContainer();\n    initRef.current = true;\n  } // [Legacy] Used by `rc-trigger`\n\n\n  useEffect(function () {\n    didUpdate === null || didUpdate === void 0 ? void 0 : didUpdate(props);\n  });\n  useEffect(function () {\n    return function () {\n      var _containerRef$current, _containerRef$current2;\n\n      // [Legacy] This should not be handle by Portal but parent PortalWrapper instead.\n      // Since some component use `Portal` directly, we have to keep the logic here.\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.parentNode) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.removeChild(containerRef.current);\n    };\n  }, []);\n  return containerRef.current ? ReactDOM.createPortal(children, containerRef.current) : null;\n});\nexport default Portal;","import React from 'react';\nimport { isFragment } from 'react-is';\nexport default function toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  React.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","export default function contains(root, n) {\n  if (!root) {\n    return false;\n  }\n\n  return root.contains(n);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  var _super = _createSuper(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    _this = _super.apply(this, arguments);\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }));\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if (React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (!React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;","import ReactDOM from 'react-dom';\nexport default function addEventListenerWrap(target, eventType, cb, option) {\n  /* eslint camelcase: 2 */\n  var callback = ReactDOM.unstable_batchedUpdates ? function run(e) {\n    ReactDOM.unstable_batchedUpdates(cb, e);\n  } : cb;\n\n  if (target.addEventListener) {\n    target.addEventListener(eventType, callback, option);\n  }\n\n  return {\n    remove: function remove() {\n      if (target.removeEventListener) {\n        target.removeEventListener(eventType, callback);\n      }\n    }\n  };\n}"],"sourceRoot":""}